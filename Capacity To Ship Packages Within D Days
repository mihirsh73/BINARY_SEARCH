class Solution { // this problem is similar to bol alocation
public:
    bool check(vector<int> &weights, int days, int mid)
    {
        int count=1;
        int capacity=0;
        for(int i=0; i<weights.size(); i++)
        {
            capacity += weights[i];
            if(capacity>mid)
            {
                count++;
                capacity=weights[i];
                if(capacity>mid)
                {
                    return false;
                }
            }
        }
        if(count<=days) return true;
        return false;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int total_weight=0;
        for(int i=0; i<weights.size(); i++)
        {
            total_weight += weights[i];
        }
        int l=1; // also take maximum element forom the weights
        int h= total_weight;
        int ans;
        while(l<=h)
        {
            int mid = l + (h-l)/2;
            if(check(weights,days,mid)==true)
            {
                ans = mid;
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;
        
        
        
    }
};
//TC O(NLOG(N))
