#include <bits/stdc++.h>
// keep the k smallest element on the left half of the array 
int ninjaAndLadoos(vector<int> &arr1, vector<int> &arr2, int n, int m, int k) {
    // Write your code here.
   if(n>m)
      {
          return ninjaAndLadoos(arr2,arr1,m,n,k);
      }
      int l=max(0,k-m); // minimum element from left array  ex- if k=7 and size of arr2 = 5 and arr1 is 3 now i have to take minimum 2 elements from arr1 l= max(0,k-m)
      int r=min(k,n); // // maximum element from left array , same example r= min(n,k)
      while(l<=r)
      {
          int mid=(l+r)/2;
          int mid2= k-mid;
          int l1 = mid==0?INT_MIN:arr1[mid-1];
          int h1= mid==n?INT_MAX:arr1[mid];
          int l2= mid2==0?INT_MIN:arr2[mid2-1];
          int h2=mid2==m?INT_MAX:arr2[mid2];
          if(l1>h2)
          {
              r=mid-1;
          }
          else if(l2>h1)
          {
              l=mid+1;
          }
          else{
              return max(l1,l2);
          }
      }
      return 1;
        
}
